*&---------------------------------------------------------------------*
*& Report ZADM_BDC_FOR_FI01
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZADM_BDC_FI01_BAPI_BANK_CREATE.

types : BEGIN OF ty_file,
          banks type BNKA-BANKS,
          bankl type BNKA-BANKL,
          bank_name type BNKA_ADDR_UI-BANK_NAME,
          ort01  type ort01_gp,
        END OF   ty_file.

data : wa_file type ty_file,
       it_file type TABLE of ty_file,
       wa_bdcdata type bdcdata,
       it_bdcdata type TABLE OF bdcdata,
       wa_bdcmsgcoll type bdcmsgcoll,
       it_bdcmsgcoll type TABLE OF bdcmsgcoll.
include zadm_bdc_forms.

data bank_addrs type BAPI1011_ADDRESS.
data ret        type BAPIRET2.

START-OF-SELECTION.
cl_gui_frontend_services=>gui_upload(
  EXPORTING
    filename                = 'C:\ADM2025\FI01.txt'           " Name of file
*    filetype                = 'ASC'            " File Type (ASCII, Binary)
    has_field_separator     = 'X'            " Columns Separated by Tabs in Case of ASCII Upload
*    header_length           = 0                " Length of Header for Binary Data
*    read_by_line            = 'X'              " File Written Line-By-Line to the Internal Table
*    dat_mode                = space            " Numeric and date fields are in DAT format in WS_DOWNLOAD
*    codepage                =                  " Character Representation for Output
*    ignore_cerr             = abap_true        " Ignore character set conversion errors?
*    replacement             = '#'              " Replacement Character for Non-Convertible Characters
*    virus_scan_profile      =                  " Virus Scan Profile
*  IMPORTING
*    filelength              =                  " File Length
*    header                  =                  " File Header in Case of Binary Upload
  CHANGING
    data_tab                = it_file                  " Transfer table for file contents
*    isscanperformed         = space            " File already scanned
*  EXCEPTIONS
*    file_open_error         = 1                " File does not exist and cannot be opened
*    file_read_error         = 2                " Error when reading file
*    no_batch                = 3                " Front-End Function Cannot Be Executed in Backgrnd
*    gui_refuse_filetransfer = 4                " Incorrect front end or error on front end
*    invalid_type            = 5                " Incorrect parameter FILETYPE
*    no_authority            = 6                " No Upload Authorization
*    unknown_error           = 7                " Unknown error
*    bad_data_format         = 8                " Cannot Interpret Data in File
*    header_not_allowed      = 9                " Invalid header
*    separator_not_allowed   = 10               " Invalid separator
*    header_too_long         = 11               " Header information currently restricted to 1023 bytes
*    unknown_dp_error        = 12               " Error when calling data provider
*    access_denied           = 13               " Access to File Denied
*    dp_out_of_memory        = 14               " Not Enough Memory in DataProvider
*    disk_full               = 15               " Storage Medium full
*    dp_timeout              = 16               " Timeout of DataProvider
*    not_supported_by_gui    = 17               " GUI does not support this
*    error_no_gui            = 18               " GUI not available
*    others                  = 19
).
IF SY-SUBRC = 0.

LOOP AT it_file into wa_file.

bank_addrs-bank_name = wa_file-bank_name.
bank_addrs-city      = wa_file-ort01.
CALL FUNCTION 'BAPI_BANK_CREATE'
  EXPORTING
    bank_ctry                          = wa_file-banks
   BANK_KEY                           = wa_file-bankl
    bank_address                       = bank_addrs
*   BANK_METHOD                        =
*   BANK_FORMATTING                    =
*   BANK_ADDRESS1                      =
   I_XUPDATE                          = 'X'
*   I_CHECK_BEFORE_SAVE                =
*   BANK_IBAN_RULE                     =
*   BANK_B2B_SUPPORTED                 =
*   BANK_COR1_SUPPORTED                =
*   BANK_R_TRANSACTION_SUPPORTED       =
*   BANK_INTERNAL_BANK                 =
*   I_NO_OVERWRITE                     =
 IMPORTING
   RETURN                             = ret
*   BANKCOUNTRY                        =
*   BANKKEY                            =
          .

if ret is INITIAL.
  CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
*   EXPORTING
*     WAIT          =
*   IMPORTING
*     RETURN        =
            .

  write : / 'Bank', wa_file-bankl, 'Created Successfully' COLOR 1.
else.
  write / ret-message COLOR 3.
ENDIF.


ENDLOOP.
endif.
