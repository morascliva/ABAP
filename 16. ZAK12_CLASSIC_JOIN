


*&---------------------------------------------------------------------*
*& Report ZAK12_CLASSIC_JOIN
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZAK12_CLASSIC_JOIN.


*types : BEGIN OF ty_sales,
*          kunnr type kunnr,
*          name1 type name1_gp,
*          land1 type land1_gp,
*          vbeln type vbeln_va,
*          vkorg type vkorg,
*          netwr type netwr_ak,
*        END   OF ty_sales.
*data : it_sales type TABLE OF ty_sales,
*       wa_sales type          ty_sales.
*select kna1~kunnr
*       kna1~name1
*       kna1~land1
*       vbak~vbeln
*       vbak~vkorg
*       vbak~netwr
*from kna1 INNER JOIN vbak
*on   kna1~kunnr = vbak~kunnr
*into TABLE it_sales.
*
*if it_sales is not INITIAL.
*   LOOP AT it_sales into wa_sales.
*     write : / wa_sales-kunnr, wa_sales-name1, wa_sales-land1,
*               wa_sales-vbeln COLOR 3, wa_sales-vkorg, wa_sales-netwr COLOR 3.
*
*   ENDLOOP.
*else.
*  write / 'No Sales Data'  COLOR 1.
*endif.



select   kna1~kunnr,
         kna1~name1,
         kna1~land1,
        vbak~vbeln,
        vbak~vkorg,
        vbak~netwr
from kna1 INNER JOIN vbak
on   kna1~kunnr = vbak~kunnr
into TABLE @data(it_join)
UP TO 10 ROWS  .

write / 'it_makt using new Open SQL' COLOR 3.
uline.
if it_join is not INITIAL.
  LOOP AT it_join into data(wa_join).
     write : / sy-tabix COLOR 3, wa_join-kunnr COLOR 1, wa_join-name1 COLOR 4,
     wa_join-land1 COLOR 6, wa_join-vbeln COLOR 5, wa_join-netwr COLOR 2.
  ENDLOOP.

endif.
